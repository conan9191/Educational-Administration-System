<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.IScheduleDao" >
  <resultMap id="BaseResultMap" type="com.pojo.Schedule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="class_time" property="classTime" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="teacher_id" property="teacherId" jdbcType="INTEGER" />
    <result column="student_id" property="studentId" jdbcType="INTEGER" />
    <result column="classroom_id" property="classroomId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, class_time, course_id, teacher_id, student_id, classroom_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_schedule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_schedule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pojo.Schedule" >
    insert into t_schedule (id, name, class_time, 
      course_id, teacher_id, student_id, 
      classroom_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{classTime,jdbcType=VARCHAR}, 
      #{courseId,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{classroomId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Schedule" >
    insert into t_schedule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="classTime != null" >
        class_time,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="teacherId != null" >
        teacher_id,
      </if>
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="classroomId != null" >
        classroom_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null" >
        #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="classroomId != null" >
        #{classroomId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Schedule" >
    update t_schedule
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="classTime != null" >
        class_time = #{classTime,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="teacherId != null" >
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null" >
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="classroomId != null" >
        classroom_id = #{classroomId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Schedule" >
    update t_schedule
    set name = #{name,jdbcType=VARCHAR},
      class_time = #{classTime,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=INTEGER},
      teacher_id = #{teacherId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      classroom_id = #{classroomId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>